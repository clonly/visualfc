; file name wtlevent.ini
; by visualfc@gmail.com
; by qwl2008@gmail.com
; create for msg2cfg.exe
; time 2007-11-14

<WM_CREATE>
ext=MSG_WM_CREATE
func=OnCreate
ret=int
param=(LPCREATESTRUCT lpCreateStruct)
body=return 0;
</WM_CREATE>

<WM_INITDIALOG>
ext=MSG_WM_INITDIALOG
func=OnInitDialog
ret=BOOL
param=(CWindow wndFocus, LPARAM lInitParam)
body=return 0;
</WM_INITDIALOG>

<WM_COPYDATA>
ext=MSG_WM_COPYDATA
func=OnCopyData
ret=BOOL
param=(CWindow wnd, PCOPYDATASTRUCT pCopyDataStruct)
body=return 0;
</WM_COPYDATA>

<WM_DESTROY>
ext=MSG_WM_DESTROY
func=OnDestroy
ret=void
param=()
body=
</WM_DESTROY>

<WM_MOVE>
ext=MSG_WM_MOVE
func=OnMove
ret=void
param=(CPoint ptPos)
body=
</WM_MOVE>

<WM_SIZE>
ext=MSG_WM_SIZE
func=OnSize
ret=void
param=(UINT nType, CSize size)
body=
</WM_SIZE>

<WM_ACTIVATE>
ext=MSG_WM_ACTIVATE
func=OnActivate
ret=void
param=(UINT nState, BOOL bMinimized, CWindow wndOther)
body=
</WM_ACTIVATE>

<WM_SETFOCUS>
ext=MSG_WM_SETFOCUS
func=OnSetFocus
ret=void
param=(CWindow wndOld)
body=
</WM_SETFOCUS>

<WM_KILLFOCUS>
ext=MSG_WM_KILLFOCUS
func=OnKillFocus
ret=void
param=(CWindow wndFocus)
body=
</WM_KILLFOCUS>

<WM_ENABLE>
ext=MSG_WM_ENABLE
func=OnEnable
ret=void
param=(BOOL bEnable)
body=
</WM_ENABLE>

<WM_PAINT>
ext=MSG_WM_PAINT
func=OnPaint
ret=void
param=(CDCHandle dc)
body=
</WM_PAINT>

<WM_CLOSE>
ext=MSG_WM_CLOSE
func=OnClose
ret=void
param=()
body=
</WM_CLOSE>

<WM_QUERYENDSESSION>
ext=MSG_WM_QUERYENDSESSION
func=OnQueryEndSession
ret=BOOL
param=(UINT nSource, UINT uLogOff)
body=return 0;
</WM_QUERYENDSESSION>

<WM_QUERYOPEN>
ext=MSG_WM_QUERYOPEN
func=OnQueryOpen
ret=BOOL
param=()
body=return 0;
</WM_QUERYOPEN>

<WM_ERASEBKGND>
ext=MSG_WM_ERASEBKGND
func=OnEraseBkgnd
ret=BOOL
param=(CDCHandle dc)
body=return 0;
</WM_ERASEBKGND>

<WM_SYSCOLORCHANGE>
ext=MSG_WM_SYSCOLORCHANGE
func=OnSysColorChange
ret=void
param=()
body=
</WM_SYSCOLORCHANGE>

<WM_ENDSESSION>
ext=MSG_WM_ENDSESSION
func=OnEndSession
ret=void
param=(BOOL bEnding, UINT uLogOff)
body=
</WM_ENDSESSION>

<WM_SHOWWINDOW>
ext=MSG_WM_SHOWWINDOW
func=OnShowWindow
ret=void
param=(BOOL bShow, UINT nStatus)
body=
</WM_SHOWWINDOW>

<WM_CTLCOLOREDIT>
ext=MSG_WM_CTLCOLOREDIT
func=OnCtlColorEdit
ret=HBRUSH
param=(CDCHandle dc, CEdit edit)
body=return 0;
</WM_CTLCOLOREDIT>

<WM_CTLCOLORLISTBOX>
ext=MSG_WM_CTLCOLORLISTBOX
func=OnCtlColorListBox
ret=HBRUSH
param=(CDCHandle dc, CListBox listBox)
body=return 0;
</WM_CTLCOLORLISTBOX>

<WM_CTLCOLORBTN>
ext=MSG_WM_CTLCOLORBTN
func=OnCtlColorBtn
ret=HBRUSH
param=(CDCHandle dc, CButton button)
body=return 0;
</WM_CTLCOLORBTN>

<WM_CTLCOLORDLG>
ext=MSG_WM_CTLCOLORDLG
func=OnCtlColorDlg
ret=HBRUSH
param=(CDCHandle dc, CWindow wnd)
body=return 0;
</WM_CTLCOLORDLG>

<WM_CTLCOLORSCROLLBAR>
ext=MSG_WM_CTLCOLORSCROLLBAR
func=OnCtlColorScrollBar
ret=HBRUSH
param=(CDCHandle dc, CScrollBar scrollBar)
body=return 0;
</WM_CTLCOLORSCROLLBAR>

<WM_CTLCOLORSTATIC>
ext=MSG_WM_CTLCOLORSTATIC
func=OnCtlColorStatic
ret=HBRUSH
param=(CDCHandle dc, CStatic wndStatic)
body=return 0;
</WM_CTLCOLORSTATIC>

<WM_SETTINGCHANGE>
ext=MSG_WM_SETTINGCHANGE
func=OnSettingChange
ret=void
param=(UINT uFlags, LPCTSTR lpszSection)
body=
</WM_SETTINGCHANGE>

<WM_DEVMODECHANGE>
ext=MSG_WM_DEVMODECHANGE
func=OnDevModeChange
ret=void
param=(LPCTSTR lpDeviceName)
body=
</WM_DEVMODECHANGE>

<WM_ACTIVATEAPP>
ext=MSG_WM_ACTIVATEAPP
func=OnActivateApp
ret=void
param=(BOOL bActive, DWORD dwThreadID)
body=
</WM_ACTIVATEAPP>

<WM_FONTCHANGE>
ext=MSG_WM_FONTCHANGE
func=OnFontChange
ret=void
param=()
body=
</WM_FONTCHANGE>

<WM_TIMECHANGE>
ext=MSG_WM_TIMECHANGE
func=OnTimeChange
ret=void
param=()
body=
</WM_TIMECHANGE>

<WM_CANCELMODE>
ext=MSG_WM_CANCELMODE
func=OnCancelMode
ret=void
param=()
body=
</WM_CANCELMODE>

<WM_SETCURSOR>
ext=MSG_WM_SETCURSOR
func=OnSetCursor
ret=BOOL
param=(CWindow wnd, UINT nHitTest, UINT message)
body=return 0;
</WM_SETCURSOR>

<WM_MOUSEACTIVATE>
ext=MSG_WM_MOUSEACTIVATE
func=OnMouseActivate
ret=int
param=(CWindow wndTopLevel, UINT nHitTest, UINT message)
body=return 0;
</WM_MOUSEACTIVATE>

<WM_CHILDACTIVATE>
ext=MSG_WM_CHILDACTIVATE
func=OnChildActivate
ret=void
param=()
body=
</WM_CHILDACTIVATE>

<WM_GETMINMAXINFO>
ext=MSG_WM_GETMINMAXINFO
func=OnGetMinMaxInfo
ret=void
param=(LPMINMAXINFO lpMMI)
body=
</WM_GETMINMAXINFO>

<WM_ICONERASEBKGND>
ext=MSG_WM_ICONERASEBKGND
func=OnIconEraseBkgnd
ret=void
param=(CDCHandle dc)
body=
</WM_ICONERASEBKGND>

<WM_SPOOLERSTATUS>
ext=MSG_WM_SPOOLERSTATUS
func=OnSpoolerStatus
ret=void
param=(UINT nStatus, UINT nJobs)
body=
</WM_SPOOLERSTATUS>

<WM_DRAWITEM>
ext=MSG_WM_DRAWITEM
func=OnDrawItem
ret=void
param=(int nIDCtl, LPDRAWITEMSTRUCT lpDrawItemStruct)
body=
</WM_DRAWITEM>

<WM_MEASUREITEM>
ext=MSG_WM_MEASUREITEM
func=OnMeasureItem
ret=void
param=(int nIDCtl, LPMEASUREITEMSTRUCT lpMeasureItemStruct)
body=
</WM_MEASUREITEM>

<WM_DELETEITEM>
ext=MSG_WM_DELETEITEM
func=OnDeleteItem
ret=void
param=(int nIDCtl, LPDELETEITEMSTRUCT lpDeleteItemStruct)
body=
</WM_DELETEITEM>

<WM_CHARTOITEM>
ext=MSG_WM_CHARTOITEM
func=OnCharToItem
ret=int
param=(UINT nChar, UINT nIndex, CListBox listBox)
body=return 0;
</WM_CHARTOITEM>

<WM_VKEYTOITEM>
ext=MSG_WM_VKEYTOITEM
func=OnVKeyToItem
ret=int
param=(UINT nKey, UINT nIndex, CListBox listBox)
body=return 0;
</WM_VKEYTOITEM>

<WM_QUERYDRAGICON>
ext=MSG_WM_QUERYDRAGICON
func=OnQueryDragIcon
ret=HCURSOR
param=()
body=return 0;
</WM_QUERYDRAGICON>

<WM_COMPAREITEM>
ext=MSG_WM_COMPAREITEM
func=OnCompareItem
ret=int
param=(int nIDCtl, LPCOMPAREITEMSTRUCT lpCompareItemStruct)
body=return 0;
</WM_COMPAREITEM>

<WM_COMPACTING>
ext=MSG_WM_COMPACTING
func=OnCompacting
ret=void
param=(UINT nCpuTime)
body=
</WM_COMPACTING>

<WM_NCCREATE>
ext=MSG_WM_NCCREATE
func=OnNcCreate
ret=BOOL
param=(LPCREATESTRUCT lpCreateStruct)
body=return 0;
</WM_NCCREATE>

<WM_NCDESTROY>
ext=MSG_WM_NCDESTROY
func=OnNcDestroy
ret=void
param=()
body=
</WM_NCDESTROY>

<WM_NCCALCSIZE>
ext=MSG_WM_NCCALCSIZE
func=OnNcCalcSize
ret=LRESULT
param=(BOOL bCalcValidRects, LPARAM lParam)
body=return 0;
</WM_NCCALCSIZE>

<WM_NCHITTEST>
ext=MSG_WM_NCHITTEST
func=OnNcHitTest
ret=UINT
param=(CPoint point)
body=return 0;
</WM_NCHITTEST>

<WM_NCPAINT>
ext=MSG_WM_NCPAINT
func=OnNcPaint
ret=void
param=(CRgn rgn)
body=
</WM_NCPAINT>

<WM_NCACTIVATE>
ext=MSG_WM_NCACTIVATE
func=OnNcActivate
ret=BOOL
param=(BOOL bActive)
body=return 0;
</WM_NCACTIVATE>

<WM_GETDLGCODE>
ext=MSG_WM_GETDLGCODE
func=OnGetDlgCode
ret=UINT
param=(LPMSG lpMsg)
body=return 0;
</WM_GETDLGCODE>

<WM_NCMOUSEMOVE>
ext=MSG_WM_NCMOUSEMOVE
func=OnNcMouseMove
ret=void
param=(UINT nHitTest, CPoint point)
body=
</WM_NCMOUSEMOVE>

<WM_NCLBUTTONDOWN>
ext=MSG_WM_NCLBUTTONDOWN
func=OnNcLButtonDown
ret=void
param=(UINT nHitTest, CPoint point)
body=
</WM_NCLBUTTONDOWN>

<WM_NCLBUTTONUP>
ext=MSG_WM_NCLBUTTONUP
func=OnNcLButtonUp
ret=void
param=(UINT nHitTest, CPoint point)
body=
</WM_NCLBUTTONUP>

<WM_NCLBUTTONDBLCLK>
ext=MSG_WM_NCLBUTTONDBLCLK
func=OnNcLButtonDblClk
ret=void
param=(UINT nHitTest, CPoint point)
body=
</WM_NCLBUTTONDBLCLK>

<WM_NCRBUTTONDOWN>
ext=MSG_WM_NCRBUTTONDOWN
func=OnNcRButtonDown
ret=void
param=(UINT nHitTest, CPoint point)
body=
</WM_NCRBUTTONDOWN>

<WM_NCRBUTTONUP>
ext=MSG_WM_NCRBUTTONUP
func=OnNcRButtonUp
ret=void
param=(UINT nHitTest, CPoint point)
body=
</WM_NCRBUTTONUP>

<WM_NCRBUTTONDBLCLK>
ext=MSG_WM_NCRBUTTONDBLCLK
func=OnNcRButtonDblClk
ret=void
param=(UINT nHitTest, CPoint point)
body=
</WM_NCRBUTTONDBLCLK>

<WM_NCMBUTTONDOWN>
ext=MSG_WM_NCMBUTTONDOWN
func=OnNcMButtonDown
ret=void
param=(UINT nHitTest, CPoint point)
body=
</WM_NCMBUTTONDOWN>

<WM_NCMBUTTONUP>
ext=MSG_WM_NCMBUTTONUP
func=OnNcMButtonUp
ret=void
param=(UINT nHitTest, CPoint point)
body=
</WM_NCMBUTTONUP>

<WM_NCMBUTTONDBLCLK>
ext=MSG_WM_NCMBUTTONDBLCLK
func=OnNcMButtonDblClk
ret=void
param=(UINT nHitTest, CPoint point)
body=
</WM_NCMBUTTONDBLCLK>

<WM_KEYDOWN>
ext=MSG_WM_KEYDOWN
func=OnKeyDown
ret=void
param=(UINT nChar, UINT nRepCnt, UINT nFlags)
body=
</WM_KEYDOWN>

<WM_KEYUP>
ext=MSG_WM_KEYUP
func=OnKeyUp
ret=void
param=(UINT nChar, UINT nRepCnt, UINT nFlags)
body=
</WM_KEYUP>

<WM_CHAR>
ext=MSG_WM_CHAR
func=OnChar
ret=void
param=(UINT nChar, UINT nRepCnt, UINT nFlags)
body=
</WM_CHAR>

<WM_DEADCHAR>
ext=MSG_WM_DEADCHAR
func=OnDeadChar
ret=void
param=(UINT nChar, UINT nRepCnt, UINT nFlags)
body=
</WM_DEADCHAR>

<WM_SYSKEYDOWN>
ext=MSG_WM_SYSKEYDOWN
func=OnSysKeyDown
ret=void
param=(UINT nChar, UINT nRepCnt, UINT nFlags)
body=
</WM_SYSKEYDOWN>

<WM_SYSKEYUP>
ext=MSG_WM_SYSKEYUP
func=OnSysKeyUp
ret=void
param=(UINT nChar, UINT nRepCnt, UINT nFlags)
body=
</WM_SYSKEYUP>

<WM_SYSCHAR>
ext=MSG_WM_SYSCHAR
func=OnSysChar
ret=void
param=(UINT nChar, UINT nRepCnt, UINT nFlags)
body=
</WM_SYSCHAR>

<WM_SYSDEADCHAR>
ext=MSG_WM_SYSDEADCHAR
func=OnSysDeadChar
ret=void
param=(UINT nChar, UINT nRepCnt, UINT nFlags)
body=
</WM_SYSDEADCHAR>

<WM_SYSCOMMAND>
ext=MSG_WM_SYSCOMMAND
func=OnSysCommand
ret=void
param=(UINT nID, LPARAM lParam)
body=
</WM_SYSCOMMAND>

<WM_TCARD>
ext=MSG_WM_TCARD
func=OnTCard
ret=void
param=(UINT idAction, DWORD dwActionData)
body=
</WM_TCARD>

<WM_TIMER>
ext=MSG_WM_TIMER
func=OnTimer
ret=void
param=(UINT_PTR nIDEvent)
body=
</WM_TIMER>

<WM_HSCROLL>
ext=MSG_WM_HSCROLL
func=OnHScroll
ret=void
param=(UINT nSBCode, UINT nPos, CScrollBar pScrollBar)
body=
</WM_HSCROLL>

<WM_VSCROLL>
ext=MSG_WM_VSCROLL
func=OnVScroll
ret=void
param=(UINT nSBCode, UINT nPos, CScrollBar pScrollBar)
body=
</WM_VSCROLL>

<WM_INITMENU>
ext=MSG_WM_INITMENU
func=OnInitMenu
ret=void
param=(CMenu menu)
body=
</WM_INITMENU>

<WM_INITMENUPOPUP>
ext=MSG_WM_INITMENUPOPUP
func=OnInitMenuPopup
ret=void
param=(CMenu menuPopup, UINT nIndex, BOOL bSysMenu)
body=
</WM_INITMENUPOPUP>

<WM_MENUSELECT>
ext=MSG_WM_MENUSELECT
func=OnMenuSelect
ret=void
param=(UINT nItemID, UINT nFlags, CMenu menu)
body=
</WM_MENUSELECT>

<WM_MENUCHAR>
ext=MSG_WM_MENUCHAR
func=OnMenuChar
ret=LRESULT
param=(UINT nChar, UINT nFlags, CMenu menu)
body=return 0;
</WM_MENUCHAR>

<WM_NOTIFY>
ext=MSG_WM_NOTIFY
func=OnNotify
ret=LRESULT
param=(int idCtrl, LPNMHDR pnmh)
body=return 0;
</WM_NOTIFY>

<WM_ENTERIDLE>
ext=MSG_WM_ENTERIDLE
func=OnEnterIdle
ret=void
param=(UINT nWhy, CWindow wndWho)
body=
</WM_ENTERIDLE>

<WM_MOUSEMOVE>
ext=MSG_WM_MOUSEMOVE
func=OnMouseMove
ret=void
param=(UINT nFlags, CPoint point)
body=
</WM_MOUSEMOVE>

<WM_MOUSEWHEEL>
ext=MSG_WM_MOUSEWHEEL
func=OnMouseWheel
ret=BOOL
param=(UINT nFlags, short zDelta, CPoint pt)
body=return 0;
</WM_MOUSEWHEEL>

<WM_LBUTTONDOWN>
ext=MSG_WM_LBUTTONDOWN
func=OnLButtonDown
ret=void
param=(UINT nFlags, CPoint point)
body=
</WM_LBUTTONDOWN>

<WM_LBUTTONUP>
ext=MSG_WM_LBUTTONUP
func=OnLButtonUp
ret=void
param=(UINT nFlags, CPoint point)
body=
</WM_LBUTTONUP>

<WM_LBUTTONDBLCLK>
ext=MSG_WM_LBUTTONDBLCLK
func=OnLButtonDblClk
ret=void
param=(UINT nFlags, CPoint point)
body=
</WM_LBUTTONDBLCLK>

<WM_RBUTTONDOWN>
ext=MSG_WM_RBUTTONDOWN
func=OnRButtonDown
ret=void
param=(UINT nFlags, CPoint point)
body=
</WM_RBUTTONDOWN>

<WM_RBUTTONUP>
ext=MSG_WM_RBUTTONUP
func=OnRButtonUp
ret=void
param=(UINT nFlags, CPoint point)
body=
</WM_RBUTTONUP>

<WM_RBUTTONDBLCLK>
ext=MSG_WM_RBUTTONDBLCLK
func=OnRButtonDblClk
ret=void
param=(UINT nFlags, CPoint point)
body=
</WM_RBUTTONDBLCLK>

<WM_MBUTTONDOWN>
ext=MSG_WM_MBUTTONDOWN
func=OnMButtonDown
ret=void
param=(UINT nFlags, CPoint point)
body=
</WM_MBUTTONDOWN>

<WM_MBUTTONUP>
ext=MSG_WM_MBUTTONUP
func=OnMButtonUp
ret=void
param=(UINT nFlags, CPoint point)
body=
</WM_MBUTTONUP>

<WM_MBUTTONDBLCLK>
ext=MSG_WM_MBUTTONDBLCLK
func=OnMButtonDblClk
ret=void
param=(UINT nFlags, CPoint point)
body=
</WM_MBUTTONDBLCLK>

<WM_PARENTNOTIFY>
ext=MSG_WM_PARENTNOTIFY
func=OnParentNotify
ret=void
param=(UINT message, UINT nChildID, LPARAM lParam)
body=
</WM_PARENTNOTIFY>

<WM_MDIACTIVATE>
ext=MSG_WM_MDIACTIVATE
func=OnMDIActivate
ret=void
param=(CWindow wndActivate, CWindow wndDeactivate)
body=
</WM_MDIACTIVATE>

<WM_RENDERFORMAT>
ext=MSG_WM_RENDERFORMAT
func=OnRenderFormat
ret=void
param=(UINT nFormat)
body=
</WM_RENDERFORMAT>

<WM_RENDERALLFORMATS>
ext=MSG_WM_RENDERALLFORMATS
func=OnRenderAllFormats
ret=void
param=()
body=
</WM_RENDERALLFORMATS>

<WM_DESTROYCLIPBOARD>
ext=MSG_WM_DESTROYCLIPBOARD
func=OnDestroyClipboard
ret=void
param=()
body=
</WM_DESTROYCLIPBOARD>

<WM_DRAWCLIPBOARD>
ext=MSG_WM_DRAWCLIPBOARD
func=OnDrawClipboard
ret=void
param=()
body=
</WM_DRAWCLIPBOARD>

<WM_PAINTCLIPBOARD>
ext=MSG_WM_PAINTCLIPBOARD
func=OnPaintClipboard
ret=void
param=(CWindow wndViewer, const LPPAINTSTRUCT lpPaintStruct)
body=
</WM_PAINTCLIPBOARD>

<WM_VSCROLLCLIPBOARD>
ext=MSG_WM_VSCROLLCLIPBOARD
func=OnVScrollClipboard
ret=void
param=(CWindow wndViewer, UINT nSBCode, UINT nPos)
body=
</WM_VSCROLLCLIPBOARD>

<WM_CONTEXTMENU>
ext=MSG_WM_CONTEXTMENU
func=OnContextMenu
ret=void
param=(CWindow wnd, CPoint point)
body=
</WM_CONTEXTMENU>

<WM_SIZECLIPBOARD>
ext=MSG_WM_SIZECLIPBOARD
func=OnSizeClipboard
ret=void
param=(CWindow wndViewer, const LPRECT lpRect)
body=
</WM_SIZECLIPBOARD>

<WM_ASKCBFORMATNAME>
ext=MSG_WM_ASKCBFORMATNAME
func=OnAskCbFormatName
ret=void
param=(UINT nMaxCount, LPTSTR lpszString)
body=
</WM_ASKCBFORMATNAME>

<WM_CHANGECBCHAIN>
ext=MSG_WM_CHANGECBCHAIN
func=OnChangeCbChain
ret=void
param=(CWindow wndRemove, CWindow wndAfter)
body=
</WM_CHANGECBCHAIN>

<WM_HSCROLLCLIPBOARD>
ext=MSG_WM_HSCROLLCLIPBOARD
func=OnHScrollClipboard
ret=void
param=(CWindow wndViewer, UINT nSBCode, UINT nPos)
body=
</WM_HSCROLLCLIPBOARD>

<WM_QUERYNEWPALETTE>
ext=MSG_WM_QUERYNEWPALETTE
func=OnQueryNewPalette
ret=BOOL
param=()
body=return 0;
</WM_QUERYNEWPALETTE>

<WM_PALETTECHANGED>
ext=MSG_WM_PALETTECHANGED
func=OnPaletteChanged
ret=void
param=(CWindow wndFocus)
body=
</WM_PALETTECHANGED>

<WM_PALETTEISCHANGING>
ext=MSG_WM_PALETTEISCHANGING
func=OnPaletteIsChanging
ret=void
param=(CWindow wndPalChg)
body=
</WM_PALETTEISCHANGING>

<WM_DROPFILES>
ext=MSG_WM_DROPFILES
func=OnDropFiles
ret=void
param=(HDROP hDropInfo)
body=
</WM_DROPFILES>

<WM_WINDOWPOSCHANGING>
ext=MSG_WM_WINDOWPOSCHANGING
func=OnWindowPosChanging
ret=void
param=(LPWINDOWPOS lpWndPos)
body=
</WM_WINDOWPOSCHANGING>

<WM_WINDOWPOSCHANGED>
ext=MSG_WM_WINDOWPOSCHANGED
func=OnWindowPosChanged
ret=void
param=(LPWINDOWPOS lpWndPos)
body=
</WM_WINDOWPOSCHANGED>

<WM_EXITMENULOOP>
ext=MSG_WM_EXITMENULOOP
func=OnExitMenuLoop
ret=void
param=(BOOL fIsTrackPopupMenu)
body=
</WM_EXITMENULOOP>

<WM_ENTERMENULOOP>
ext=MSG_WM_ENTERMENULOOP
func=OnEnterMenuLoop
ret=void
param=(BOOL fIsTrackPopupMenu)
body=
</WM_ENTERMENULOOP>

<WM_STYLECHANGED>
ext=MSG_WM_STYLECHANGED
func=OnStyleChanged
ret=void
param=(int nStyleType, LPSTYLESTRUCT lpStyleStruct)
body=
</WM_STYLECHANGED>

<WM_STYLECHANGING>
ext=MSG_WM_STYLECHANGING
func=OnStyleChanging
ret=void
param=(int nStyleType, LPSTYLESTRUCT lpStyleStruct)
body=
</WM_STYLECHANGING>

<WM_SIZING>
ext=MSG_WM_SIZING
func=OnSizing
ret=void
param=(UINT fwSide, LPRECT pRect)
body=
</WM_SIZING>

<WM_MOVING>
ext=MSG_WM_MOVING
func=OnMoving
ret=void
param=(UINT fwSide, LPRECT pRect)
body=
</WM_MOVING>

<WM_CAPTURECHANGED>
ext=MSG_WM_CAPTURECHANGED
func=OnCaptureChanged
ret=void
param=(CWindow wnd)
body=
</WM_CAPTURECHANGED>

<WM_DEVICECHANGE>
ext=MSG_WM_DEVICECHANGE
func=OnDeviceChange
ret=BOOL
param=(UINT nEventType, DWORD dwData)
body=return 0;
</WM_DEVICECHANGE>

<WM_COMMAND>
ext=MSG_WM_COMMAND
func=OnCommand
ret=void
param=(UINT uNotifyCode, int nID, CWindow wndCtl)
body=
</WM_COMMAND>

<WM_DISPLAYCHANGE>
ext=MSG_WM_DISPLAYCHANGE
func=OnDisplayChange
ret=void
param=(UINT uBitsPerPixel, CSize sizeScreen)
body=
</WM_DISPLAYCHANGE>

<WM_ENTERSIZEMOVE>
ext=MSG_WM_ENTERSIZEMOVE
func=OnEnterSizeMove
ret=void
param=()
body=
</WM_ENTERSIZEMOVE>

<WM_EXITSIZEMOVE>
ext=MSG_WM_EXITSIZEMOVE
func=OnExitSizeMove
ret=void
param=()
body=
</WM_EXITSIZEMOVE>

<WM_GETFONT>
ext=MSG_WM_GETFONT
func=OnGetFont
ret=HFONT
param=()
body=return 0;
</WM_GETFONT>

<WM_GETHOTKEY>
ext=MSG_WM_GETHOTKEY
func=OnGetHotKey
ret=LRESULT
param=()
body=return 0;
</WM_GETHOTKEY>

<WM_GETICON>
ext=MSG_WM_GETICON
func=OnGetIcon
ret=HICON
param=()
body=return 0;
</WM_GETICON>

<WM_GETTEXT>
ext=MSG_WM_GETTEXT
func=OnGetText
ret=int
param=(int cchTextMax, LPTSTR lpszText)
body=return 0;
</WM_GETTEXT>

<WM_GETTEXTLENGTH>
ext=MSG_WM_GETTEXTLENGTH
func=OnGetTextLength
ret=int
param=()
body=return 0;
</WM_GETTEXTLENGTH>

<WM_HELP>
ext=MSG_WM_HELP
func=OnHelp
ret=void
param=(LPHELPINFO lpHelpInfo)
body=
</WM_HELP>

<WM_HOTKEY>
ext=MSG_WM_HOTKEY
func=OnHotKey
ret=void
param=(int nHotKeyID, UINT uModifiers, UINT uVirtKey)
body=
</WM_HOTKEY>

<WM_INPUTLANGCHANGE>
ext=MSG_WM_INPUTLANGCHANGE
func=OnInputLangChange
ret=void
param=(DWORD dwCharSet, HKL hKbdLayout)
body=
</WM_INPUTLANGCHANGE>

<WM_INPUTLANGCHANGEREQUEST>
ext=MSG_WM_INPUTLANGCHANGEREQUEST
func=OnInputLangChangeRequest
ret=void
param=(BOOL bSysCharSet, HKL hKbdLayout)
body=
</WM_INPUTLANGCHANGEREQUEST>

<WM_NEXTDLGCTL>
ext=MSG_WM_NEXTDLGCTL
func=OnNextDlgCtl
ret=void
param=(BOOL bHandle, WPARAM wCtlFocus)
body=
</WM_NEXTDLGCTL>

<WM_NEXTMENU>
ext=MSG_WM_NEXTMENU
func=OnNextMenu
ret=void
param=(int nVirtKey, LPMDINEXTMENU lpMdiNextMenu)
body=
</WM_NEXTMENU>

<WM_NOTIFYFORMAT>
ext=MSG_WM_NOTIFYFORMAT
func=OnNotifyFormat
ret=int
param=(CWindow wndFrom, int nCommand)
body=return 0;
</WM_NOTIFYFORMAT>

<WM_POWERBROADCAST>
ext=MSG_WM_POWERBROADCAST
func=OnPowerBroadcast
ret=BOOL
param=(DWORD dwPowerEvent, DWORD dwData)
body=return 0;
</WM_POWERBROADCAST>

<WM_PRINT>
ext=MSG_WM_PRINT
func=OnPrint
ret=void
param=(CDCHandle dc, UINT uFlags)
body=
</WM_PRINT>

<WM_PRINTCLIENT>
ext=MSG_WM_PRINTCLIENT
func=OnPrintClient
ret=void
param=(CDCHandle dc, UINT uFlags)
body=
</WM_PRINTCLIENT>

<WM_RASDIALEVENT>
ext=MSG_WM_RASDIALEVENT
func=OnRasDialEvent
ret=void
param=(RASCONNSTATE rasconnstate, DWORD dwError)
body=
</WM_RASDIALEVENT>

<WM_SETFONT>
ext=MSG_WM_SETFONT
func=OnSetFont
ret=void
param=(CFont font, BOOL bRedraw)
body=
</WM_SETFONT>

<WM_SETHOTKEY>
ext=MSG_WM_SETHOTKEY
func=OnSetHotKey
ret=int
param=(int nVirtKey, UINT uFlags)
body=return 0;
</WM_SETHOTKEY>

<WM_SETICON>
ext=MSG_WM_SETICON
func=OnSetIcon
ret=HICON
param=(UINT uType, HICON hIcon)
body=return 0;
</WM_SETICON>

<WM_SETREDRAW>
ext=MSG_WM_SETREDRAW
func=OnSetRedraw
ret=void
param=(BOOL bRedraw)
body=
</WM_SETREDRAW>

<WM_SETTEXT>
ext=MSG_WM_SETTEXT
func=OnSetText
ret=int
param=(LPCTSTR lpstrText)
body=return 0;
</WM_SETTEXT>

<WM_USERCHANGED>
ext=MSG_WM_USERCHANGED
func=OnUserChanged
ret=void
param=()
body=
</WM_USERCHANGED>

<WM_MOUSEHOVER>
ext=MSG_WM_MOUSEHOVER
func=OnMouseHover
ret=void
param=(WPARAM wParam, CPoint ptPos)
body=
</WM_MOUSEHOVER>

<WM_MOUSELEAVE>
ext=MSG_WM_MOUSELEAVE
func=OnMouseLeave
ret=void
param=()
body=
</WM_MOUSELEAVE>

<WM_MENURBUTTONUP>
ext=MSG_WM_MENURBUTTONUP
func=OnMenuRButtonUp
ret=void
param=(WPARAM wParam, CMenu menu)
body=
</WM_MENURBUTTONUP>

<WM_MENUDRAG>
ext=MSG_WM_MENUDRAG
func=OnMenuDrag
ret=LRESULT
param=(WPARAM wParam, CMenu menu)
body=return 0;
</WM_MENUDRAG>

<WM_MENUGETOBJECT>
ext=MSG_WM_MENUGETOBJECT
func=OnMenuGetObject
ret=LRESULT
param=(PMENUGETOBJECTINFO info)
body=return 0;
</WM_MENUGETOBJECT>

<WM_UNINITMENUPOPUP>
ext=MSG_WM_UNINITMENUPOPUP
func=OnUnInitMenuPopup
ret=void
param=(UINT nID, CMenu menu)
body=
</WM_UNINITMENUPOPUP>

<WM_MENUCOMMAND>
ext=MSG_WM_MENUCOMMAND
func=OnMenuCommand
ret=void
param=(WPARAM nIndex, CMenu menu)
body=
</WM_MENUCOMMAND>

<WM_APPCOMMAND>
ext=MSG_WM_APPCOMMAND
func=OnAppCommand
ret=BOOL
param=(CWindow wndFocus, short cmd, WORD uDevice, int dwKeys)
body=return 0;
</WM_APPCOMMAND>

<WM_NCXBUTTONDOWN>
ext=MSG_WM_NCXBUTTONDOWN
func=OnNCXButtonDown
ret=void
param=(int fwButton, short nHittest, CPoint ptPos)
body=
</WM_NCXBUTTONDOWN>

<WM_NCXBUTTONUP>
ext=MSG_WM_NCXBUTTONUP
func=OnNCXButtonUp
ret=void
param=(int fwButton, short nHittest, CPoint ptPos)
body=
</WM_NCXBUTTONUP>

<WM_NCXBUTTONDBLCLK>
ext=MSG_WM_NCXBUTTONDBLCLK
func=OnNCXButtonDblClk
ret=void
param=(int fwButton, short nHittest, CPoint ptPos)
body=
</WM_NCXBUTTONDBLCLK>

<WM_XBUTTONDOWN>
ext=MSG_WM_XBUTTONDOWN
func=OnXButtonDown
ret=void
param=(int fwButton, int dwKeys, CPoint ptPos)
body=
</WM_XBUTTONDOWN>

<WM_XBUTTONUP>
ext=MSG_WM_XBUTTONUP
func=OnXButtonUp
ret=void
param=(int fwButton, int dwKeys, CPoint ptPos)
body=
</WM_XBUTTONUP>

<WM_XBUTTONDBLCLK>
ext=MSG_WM_XBUTTONDBLCLK
func=OnXButtonDblClk
ret=void
param=(int fwButton, int dwKeys, CPoint ptPos)
body=
</WM_XBUTTONDBLCLK>

<WM_CHANGEUISTATE>
ext=MSG_WM_CHANGEUISTATE
func=OnChangeUIState
ret=void
param=(WORD nAction, WORD nState)
body=
</WM_CHANGEUISTATE>

<WM_UPDATEUISTATE>
ext=MSG_WM_UPDATEUISTATE
func=OnUpdateUIState
ret=void
param=(WORD nAction, WORD nState)
body=
</WM_UPDATEUISTATE>

<WM_QUERYUISTATE>
ext=MSG_WM_QUERYUISTATE
func=OnQueryUIState
ret=LRESULT
param=()
body=return 0;
</WM_QUERYUISTATE>

<WM_INPUT>
ext=MSG_WM_INPUT
func=OnInput
ret=void
param=(WPARAM RawInputCode, HRAWINPUT hRawInput)
body=
</WM_INPUT>

<WM_UNICHAR>
ext=MSG_WM_UNICHAR
func=OnUniChar
ret=void
param=(TCHAR nChar, UINT nRepCnt, UINT nFlags)
body=
</WM_UNICHAR>

<WM_WTSSESSION_CHANGE>
ext=MSG_WM_WTSSESSION_CHANGE
func=OnWTSSessionChange
ret=void
param=(WPARAM nStatusCode, PWTSSESSION_NOTIFICATION nSessionID)
body=
</WM_WTSSESSION_CHANGE>

<WM_THEMECHANGED>
ext=MSG_WM_THEMECHANGED
func=OnThemeChanged(
ret=
param=()
body=return 0;
</WM_THEMECHANGED>

<WM_FORWARDMSG>
ext=MSG_WM_FORWARDMSG
func=OnForwardMsg
ret=BOOL
param=(LPMSG Msg, DWORD nUserData)
body=return 0;
</WM_FORWARDMSG>

<WM_CLEAR>
ext=MSG_WM_CLEAR
func=OnClear
ret=void
param=()
body=
</WM_CLEAR>

<WM_COPY>
ext=MSG_WM_COPY
func=OnCopy
ret=void
param=()
body=
</WM_COPY>

<WM_CUT>
ext=MSG_WM_CUT
func=OnCut
ret=void
param=()
body=
</WM_CUT>

<WM_PASTE>
ext=MSG_WM_PASTE
func=OnPaste
ret=void
param=()
body=
</WM_PASTE>

<WM_UNDO>
ext=MSG_WM_UNDO
func=OnUndo
ret=void
param=()
body=
</WM_UNDO>

